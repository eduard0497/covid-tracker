{"version":3,"sources":["CardBox.js","Table.js","CountryFlag.js","App.js","util.js","index.js"],"names":["CardBox","title","cases","total","props","Card","className","onClick","CardContent","Typography","color","Table","countries","map","country","CountryFlag","link","countryCode","toLowerCase","src","App","handleCountryChange","e","a","setState","selectedCountry","target","value","url","state","fetch","then","response","json","data","selectedCountryData","countryInfo","iso2","countriesAndCodes","worldwide","name","sortedData","sort","b","sortData","FormControl","Select","variant","this","onChange","MenuItem","casesType","todayCases","todayRecovered","recovered","todayDeaths","deaths","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca8ef0a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\n\r\nfunction CardBox({ title, cases, total, ...props }) {\r\n\treturn (\r\n\t\t<Card \r\n\t\t\tclassName='cardBox'\r\n\t\t\tonClick={props.onClick}\r\n\t\t\t>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography color='textSecondary'>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<h2>{cases}</h2>\r\n\r\n\t\t\t\t<Typography color='textSecondary'>\r\n\t\t\t\t\t{total} in Total\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\n\r\nexport default CardBox;","import React from 'react';\r\nimport './Table.css';\r\n\r\nfunction Table(props) {\r\n\r\n\treturn(\r\n\t\t<div className='table'>\r\n\r\n\t\t\t{props.countries.map( (country) => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>{country.country}</td>\r\n\t\t\t\t\t\t<td><strong>{country.cases}</strong></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport './CountryFlag.css';\r\n\r\n//link = `https://www.countryflags.io/${countryCode.toLowerCase()}/flat/64.png`\r\n\r\nfunction CountryFlag({ countryCode }) {\r\n\r\n\tlet link;\r\n\r\n\tcountryCode === 'worldwide' \r\n\t? \r\n\tlink = 'https://www.nicepng.com/png/detail/39-395355_clip-art-globe-colorful-icon-png.png'\r\n\t:\r\n\tlink = `https://flagcdn.com/256x192/${countryCode.toLowerCase()}.png`\r\n\r\n\t\r\n\treturn(\r\n\t\t<div className='image__container'>\r\n\t\t\t<img src={link} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default CountryFlag;","import React, { Component } from 'react';\nimport { \n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardContent\n   } from '@material-ui/core';\nimport CardBox from './CardBox.js';\nimport Table from './Table.js';\nimport './App.css';\nimport { sortData } from './util';\nimport CountryFlag from './CountryFlag.js';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      countriesAndCodes: [],\n      selectedCountry: 'worldwide',\n      selectedCountryData: {},\n      worldwide: [],\n      countryCode: 'worldwide'\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://disease.sh/v3/covid-19/countries')\n    .then(response => response.json())\n    .then(data => {\n      const countries = data.map((country) => (\n      {\n        name: country.country,\n        value: country.countryInfo.iso2\n      }\n      ));\n      this.setState({ countriesAndCodes: countries})\n\n      const sortedData = sortData(data);\n      this.setState({ worldwide: sortedData })\n    })\n  \n\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ selectedCountryData: data })\n    })\n\n  }\n\n\n  handleCountryChange = async (e) => {\n    await this.setState({selectedCountry: e.target.value })\n\n    const url = this.state.selectedCountry === 'worldwide' \n    ? \n    'https://disease.sh/v3/covid-19/all' \n    : \n    `https://disease.sh/v3/covid-19/countries/${this.state.selectedCountry}` \n\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ selectedCountryData: data })\n    })\n\n    if(this.state.selectedCountry === 'worldwide') {\n      await this.setState({ countryCode: 'worldwide' })\n    } else {\n      await this.setState({ countryCode: this.state.selectedCountryData.countryInfo.iso2 })\n    }\n\n    \n  }\n\n  render() {\n    return(\n\n      <div className='app__container'>\n\n        <div className='app__container__left'>\n\n          <div className='left__title'>\n            <h1>COVID-19 Tracker</h1>\n\n            <FormControl>\n              <Select \n                variant=\"outlined\" \n                value={this.state.selectedCountry}\n                onChange={this.handleCountryChange}\n              >\n                <MenuItem value='worldwide'>Worldwide</MenuItem>\n                {this.state.countriesAndCodes.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n          </div>\n\n          <div className='left__cards'>\n            <CardBox\n              onClick={(e) => this.setState({ casesType: \"cases\" })} \n              title='Cases' \n              cases={this.state.selectedCountryData.todayCases} \n              total={this.state.selectedCountryData.cases}\n            />\n            <CardBox\n              onClick={(e) => this.setState({ casesType: \"recovered\" })} \n              title='Recovered' \n              cases={this.state.selectedCountryData.todayRecovered} \n              total={this.state.selectedCountryData.recovered} \n            />\n            <CardBox\n              onClick={(e) => this.setState({ casesType: \"deaths\" })} \n              title='Deaths' \n              cases={this.state.selectedCountryData.todayDeaths} \n              total={this.state.selectedCountryData.deaths}  \n            />\n          </div>\n\n          <div className='left__countryFlag'>\n            <CountryFlag countryCode={this.state.countryCode} />\n          </div>\n          \n        </div>\n\n\n        <Card className='app__container__right'>\n          <CardContent>\n            <h3>Total Cases by Country</h3>\n            <Table countries={this.state.worldwide} />\n          </CardContent>\n        </Card>\n\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","export const sortData = (data) => {\r\n\tconst sortedData = [...data];\r\n\r\n\tsortedData.sort((a, b) => {\r\n\t\tif(a.cases > b.cases) {\r\n\t\t\treturn -1;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t})\r\n\treturn sortedData;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}